// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String
  positions Position[]
  interviewerProfile InterviewerProfile?
}

model Position {
  id                String        @id @default(cuid())
  title            String
  yearsOfExperience Int
  requiredSkills   String[]
  description      String
  interviewer      User?         @relation(fields: [interviewerId], references: [id])
  interviewerId    String?
  applications     Application[]
  socialLinks      SocialLink[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Application {
  id           String    @id @default(cuid())
  position     Position  @relation(fields: [positionId], references: [id])
  positionId   String
  candidateName String
  email        String
  resumeUrl    String?   // Optional field for resume/CV link
  coverLetter  String?   // Optional field for cover letter
  status       String    @default("PENDING") // e.g., "PENDING", "REVIEWING", "ACCEPTED", "REJECTED"
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model SocialLink {
  id         String   @id @default(cuid())
  platform   String
  url        String
  position   Position @relation(fields: [positionId], references: [id], onDelete: Cascade)
  positionId String
}

model InterviewerProfile {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  title         String
  imageUrl      String?
  experience    Int
  description   String    @db.Text
  country       String    // Added field
  company       String    // Added field
  linkedin      String?
  github        String?
  twitter       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
} 