// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(cuid())
  email             String             @unique
  name              String
  interviewerProfile InterviewerProfile?
  interviews        Interview[]
  interviewerBookings InterviewBooking[] @relation("InterviewerBookings")
  intervieweeBookings InterviewBooking[] @relation("IntervieweeBookings")
}

model InterviewerProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  title       String
  imageUrl    String?
  experience  Int
  description String   @db.Text
  country     String
  company     String
  linkedin    String?
  github      String?
  twitter     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  interviews  Interview[]
}

model Interview {
  id                String            @id @default(cuid())
  title            String
  techStack        String
  programmingLanguage String
  domain           String
  price            Decimal           @db.Decimal(10, 2)
  questions        String[]
  interviewerId    String
  interviewer      User              @relation(fields: [interviewerId], references: [id])
  interviewerProfile InterviewerProfile @relation(fields: [interviewerProfileId], references: [id])
  interviewerProfileId String
  bookings         InterviewBooking[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  @@index([interviewerId])
  @@index([interviewerProfileId])
}

model InterviewBooking {
  id            String    @id @default(cuid())
  interviewId   String
  interview     Interview @relation(fields: [interviewId], references: [id])
  interviewerId String
  interviewer   User      @relation("InterviewerBookings", fields: [interviewerId], references: [id])
  intervieweeId String
  interviewee   User      @relation("IntervieweeBookings", fields: [intervieweeId], references: [id])
  status        String    @default("PENDING") // PENDING, CONFIRMED, COMPLETED, CANCELLED
  billId        String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([interviewId])
  @@index([interviewerId])
  @@index([intervieweeId])
} 